<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.0.3</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>com.giraone.sb3</groupId>
  <artifactId>demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>demo-sb3</name>
  <description>Demo project for Spring Boot 3</description>

  <properties>
    <java.version>17</java.version>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <junit.jupiter.version>5.9.2</junit.jupiter.version>
    <assertj.version>3.24.2</assertj.version>
    <!-- Plugin versions and properties -->
    <maven-versions-plugin.version>2.14.1</maven-versions-plugin.version>
    <jib-maven-plugin.version>3.3.1</jib-maven-plugin.version>
    <jib-maven-plugin.image>eclipse-temurin:17.0.5_8-jre@sha256:402c656f078bc116a6db1e2e23b08c6f4a78920a2c804ea4c2d3e197f1d6b47c</jib-maven-plugin.image>
    <jib-maven-plugin.architecture>amd64</jib-maven-plugin.architecture>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-bom</artifactId>
        <version>1.23.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>

    <!-- OBSERVABILITY -->
    <!-- Micrometer Prometheus registry for METRICS (Setup 1 only) -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <!-- Micrometer OpenTelemetry Bridge registry for TRACING (Setup 1 only) -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-bridge-otel</artifactId>
    </dependency>
    <!-- OpenTelemetry API and Autoconfigure to export TRACING in various formats (Setup 1 only) -->
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>
      <version>1.19.0-alpha</version>
    </dependency>
    <!-- The specific exporter format is zipkin (Setup 1 only) -->
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-zipkin</artifactId>
    </dependency>
    <!-- Must be on the class path for Spring Application Content for tests! -->
    <!--
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-otlp</artifactId>
    </dependency>-->
    <!-- Direct usage of Grafana LOKI by using its appender for LOGGING -->
    <dependency>
      <groupId>com.github.loki4j</groupId>
      <artifactId>loki-logback-appender</artifactId>
      <version>1.3.2</version>
    </dependency>

    <!-- TOOLING -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- TEST -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- JUnit jupiter as basic testing framework -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- the best available assertion language -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.name}</finalName>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <image>
            <buildpacks>
              <buildpack>gcr.io/paketo-buildpacks/bellsoft-liberica:9.9.0-ea</buildpack>
              <buildpack>gcr.io/paketo-buildpacks/java-native-image</buildpack>
            </buildpacks>
          </image>
        </configuration>
      </plugin>

      <!-- Build docker image -->
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>${jib-maven-plugin.version}</version>
        <configuration>
          <from>
            <image>${jib-maven-plugin.image}</image>
            <platforms>
              <platform>
                <architecture>${jib-maven-plugin.architecture}</architecture>
                <os>linux</os>
              </platform>
            </platforms>
          </from>
          <to>
            <image>${project.name}:latest</image>
          </to>
          <container>
            <entrypoint>
              <shell>bash</shell>
              <option>-c</option>
              <arg>/entrypoint.sh</arg>
            </entrypoint>
            <ports>
              <port>8080</port>
            </ports>
            <environment>
              <SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>
              <STARTUP_SLEEP>0</STARTUP_SLEEP>
            </environment>
            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
            <user>1000</user>
          </container>
          <extraDirectories>
            <paths>src/main/docker/jib</paths>
            <permissions>
              <permission>
                <file>/entrypoint.sh</file>
                <mode>755</mode>
              </permission>
            </permissions>
          </extraDirectories>
        </configuration>
      </plugin>

      <!-- mvn versions:update-parent && mvn versions:update-properties && mvn versions:use-latest-versions -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${maven-versions-plugin.version}</version>
        <configuration>
          <rulesUri>file:///${project.basedir}/mvn-versions-rules.xml</rulesUri>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-snapshots</id>
      <name>Spring Snapshots</name>
      <url>https://repo.spring.io/snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>spring-snapshots</id>
      <name>Spring Snapshots</name>
      <url>https://repo.spring.io/snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

</project>
