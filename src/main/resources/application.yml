server:
  port: 8080

spring:
  application:
    name: demo

logging:
  level:
    ROOT: WARN
    com.giraone.sb3.demo: INFO
    # To have some logs
    com.giraone.sb3.demo.controller.filter.SimpleRequestLoggingFilter: DEBUG

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  endpoints:
    web:
      exposure:
        # health,prometheus is needed; the others are for troubleshooting
        include: 'health,prometheus,loggers,metrics,env'
  endpoint:
    loggers:
      enabled: true
    env:
      show-values: ALWAYS # Show values - do not use in production (may leak passwords)
  metrics:
    distribution:
      percentiles-histogram:
        # For exemplars to work, we need histogram buckets
        http.server.requests: true
  tracing:
    sampling:
      # All traces should be sent to latency analysis tool
      probability: 1.0

application:
  show-config-on-startup: true
  # URL for second service
  client:
    host: 127.0.0.1
    port: 8080
  propagated-headers:
    - Authorization
#    - traceparent
#    - tracestate
#    - X-B3-TraceId
#    - X-B3-SpanId

